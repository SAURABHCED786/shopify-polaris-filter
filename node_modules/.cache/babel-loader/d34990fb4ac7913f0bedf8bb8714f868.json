{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/react_training/shopify-polaris-filter/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport { useState, useCallback } from 'react';\nimport { Page, Grid, Card, TextField, Select, ResourceList, Filters, Avatar, Stack, Badge, Modal, TextContainer, Button, Heading } from '@shopify/polaris';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  // Modal data state\n  const [active, setActive] = useState(false);\n  const [desableValue, setDesable] = useState(false); // input field state\n\n  const [textFieldValue, setTextFieldValue] = useState('');\n  const handleClearButtonClick = useCallback(() => setTextFieldValue(''), []);\n  const handleTextFieldChange = useCallback(value => setTextFieldValue(value), []); // Select Option State\n\n  const [selected1, setSelected1] = useState('Select');\n  const [selected2, setSelected2] = useState('Select');\n  const handleSelectChange1 = useCallback(value => setSelected1(value), []);\n  const handleSelectChange2 = useCallback(value => setSelected2(value), []); // Select Options Values Asigns\n\n  const condOpt1 = [{\n    label: 'Select',\n    value: 'select'\n  }, {\n    label: 'User Name',\n    value: 'username'\n  }, {\n    label: 'Id',\n    value: 'id'\n  }, {\n    label: 'Followers',\n    value: 'followers'\n  }];\n  const condOpt2 = [{\n    label: 'Select',\n    value: 'select'\n  }, {\n    label: 'Contains',\n    value: 'contains'\n  }, {\n    label: 'Does! Not Contains',\n    value: 'doesnotcontains'\n  }, {\n    label: 'Equals To',\n    value: 'equalsto'\n  }, {\n    label: 'Not Equals To',\n    value: 'notequalsto'\n  }]; // Codition Logic \n\n  const [rowdata, setRowData] = useState([]);\n  const allGitData = [];\n  const [modalData, setModalData] = useState({});\n  useEffect(() => {\n    // Username with Contains | DNContains | Equals To | Not Equals To\n    if (selected1 === 'username' && selected2 === 'contains') {\n      usrNameContains();\n    }\n\n    if (selected1 === 'username' && selected2 === 'doesnotcontains') {\n      usrNameDNCon();\n    }\n\n    if (selected1 === 'username' && selected2 === 'equalsto') {\n      usrNameEqlTo();\n    }\n\n    if (selected1 === 'username' && selected2 === 'notequalsto') {\n      usrNameNotEqlTo();\n    } // Id with Contains | DNContains | Equals To | Not Equals To\n\n\n    if (selected1 === 'id' && selected2 === 'contains') {\n      idContains();\n    }\n\n    if (selected1 === 'id' && selected2 === 'doesnotcontains') {\n      idDNCon();\n    }\n\n    if (selected1 === 'id' && selected2 === 'equalsto') {\n      idEqlTo();\n    }\n\n    if (selected1 === 'id' && selected2 === 'notequalsto') {\n      idNotEqlTo();\n    } // Followers with only Equals To \n\n\n    if (selected1 === 'followers') {\n      setSelected2('equalsto');\n      setDesable(true);\n\n      if (selected1 === 'followers' && selected2 === 'equalsto') {\n        followerEqlTo();\n      }\n    }\n  }, [textFieldValue, selected1, selected2]); // Username With Contains Data \n\n  async function usrNameContains() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (textFieldValue && user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Username With Does Not Contains Data\n\n\n  async function usrNameDNCon() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (!user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Username With Equals to\n\n\n  async function usrNameEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (user.login === textFieldValue) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Usernam with Notequals to\n\n\n  async function usrNameNotEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (!user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Id With Contains Data \n\n\n  async function idContains() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n\n      if (textFieldValue && usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Id With Does Not Contains Data\n\n\n  async function idDNCon() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n\n      if (!usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Id With Equals to\n\n\n  async function idEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n\n      if (usrID === textFieldValue) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } // Id with Notequals to\n\n\n  async function idNotEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n\n      if (!usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type\n        });\n      }\n    });\n    allGitData.push(allgitUser);\n    setRowData(tmp);\n  } //Followers With Equals To Filter\n\n\n  async function followerEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (user.login === textFieldValue && selected1 === 'followers' && selected2 === 'equalsto') {\n        fetchFollowers();\n\n        async function fetchFollowers() {\n          const gitFollowers = await fetch(`https://api.github.com/users/${user.login}/followers`);\n          const allgitFollowers = await gitFollowers.json();\n          allgitFollowers.forEach(followers => {\n            if (textFieldValue == '') {\n              setRowData(tmp.push({}));\n            }\n\n            tmp.push({\n              id: followers.id,\n              name: followers.login,\n              userPic: followers.avatar_url,\n              userUrl: followers.html_url,\n              userType: followers.type\n            });\n          });\n          allGitData.push(allgitFollowers);\n          setRowData(tmp);\n        }\n      }\n    });\n  } //Shopify Madal Data Handler\n\n\n  function handleChange2(active, id, name, userPic, userUrl, userType) {\n    //let temp = { ...modalData };    \n    let temp = {\n      id,\n      name,\n      userPic,\n      userUrl,\n      userType\n    };\n    console.log(\"temp\", temp.id);\n    setModalData(temp);\n    setActive(!active);\n  } // function test() {\n  //   console.log(\"modalData\", modalData)\n  //   return <p>{modalData.id}</p>\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sectioned: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 8,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"By \" + selected1 + \" or \" + selected2,\n              value: textFieldValue,\n              onChange: handleTextFieldChange,\n              clearButton: true,\n              onClearButtonClick: handleClearButtonClick,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 2,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Filter\",\n              options: condOpt1,\n              onChange: handleSelectChange1,\n              value: selected1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 2,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Filter\",\n              options: condOpt2,\n              onChange: handleSelectChange2,\n              value: selected2,\n              disabled: desableValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResourceList, {\n          items: rowdata,\n          renderItem: item => {\n            const {\n              id,\n              name,\n              userPic,\n              userUrl,\n              userType\n            } = item;\n\n            const media = /*#__PURE__*/_jsxDEV(Avatar, {\n              customer: true,\n              size: \"medium\",\n              source: userPic,\n              name: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(ResourceList.Item, {\n              // url={userUrl}\n              onClick: () => {\n                handleChange2(active, id, name, userPic, userUrl, userType);\n              },\n              name: name,\n              id: id //user={userPic}\n              ,\n              media: media,\n              accessibilityLabel: `View details for ${name}`,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                distribution: \"fillEvenly\",\n                spacing: \"loose\",\n                children: [/*#__PURE__*/_jsxDEV(Stack.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    children: id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    children: userType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n                  fill: true,\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"slim\",\n                    children: \"View Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '50px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  activator: Filters,\n                  open: active,\n                  onClose: () => {\n                    setActive(false);\n                  },\n                  title: \"Received user via github.\",\n                  children: /*#__PURE__*/_jsxDEV(Modal.Section, {\n                    children: /*#__PURE__*/_jsxDEV(TextContainer, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Cell, {\n                          columnSpan: {\n                            xs: 6,\n                            sm: 3,\n                            md: 3,\n                            lg: 4,\n                            xl: 6\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            sectioned: true,\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              alt: \"Profile\",\n                              src: modalData.userPic,\n                              style: {\n                                height: \"150px\",\n                                borderRadius: \"50%\"\n                              },\n                              name: name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 401,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 400,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 399,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Cell, {\n                          columnSpan: {\n                            xs: 6,\n                            sm: 3,\n                            md: 3,\n                            lg: 4,\n                            xl: 6\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            title: \"Profile\",\n                            sectioned: true,\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                marginTop: \"20px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  fontSize: \"25px\"\n                                },\n                                children: [\"ID\", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  style: {\n                                    fontSize: \"25px\",\n                                    marginLeft: \"12px\"\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                    children: modalData.id\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 408,\n                                    columnNumber: 92\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 408,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 407,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  marginTop: \"13px\"\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                  style: {\n                                    fontSize: \"25px\"\n                                  },\n                                  children: modalData.userType\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 411,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  style: {\n                                    fontSize: \"25px\",\n                                    marginLeft: \"12px\"\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                    children: modalData.name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 412,\n                                    columnNumber: 92\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 412,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 410,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  marginTop: \"16px\"\n                                },\n                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                  size: \"slim\",\n                                  url: modalData.userUrl,\n                                  children: \"View Profile\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 415,\n                                  columnNumber: 37\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 414,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 406,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 405,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Use GitHub posts to share your products with millions of people. Let shoppers buy from your store without leaving Github.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"k3XoAc3Mei8yGWZVlhTlUpY8Zog=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Page","Grid","Card","TextField","Select","ResourceList","Filters","Avatar","Stack","Badge","Modal","TextContainer","Button","Heading","Home","active","setActive","desableValue","setDesable","textFieldValue","setTextFieldValue","handleClearButtonClick","handleTextFieldChange","value","selected1","setSelected1","selected2","setSelected2","handleSelectChange1","handleSelectChange2","condOpt1","label","condOpt2","rowdata","setRowData","allGitData","modalData","setModalData","usrNameContains","usrNameDNCon","usrNameEqlTo","usrNameNotEqlTo","idContains","idDNCon","idEqlTo","idNotEqlTo","followerEqlTo","tmp","gitUser","fetch","allgitUser","json","forEach","user","login","startsWith","push","id","name","userPic","avatar_url","userUrl","html_url","userType","type","usrID","toString","fetchFollowers","gitFollowers","allgitFollowers","followers","handleChange2","temp","console","log","xs","sm","md","lg","xl","item","media","height","borderRadius","marginTop","fontSize","marginLeft"],"sources":["/home/cedcoss/Desktop/react_training/shopify-polaris-filter/src/pages/Home.jsx"],"sourcesContent":["import { React, useEffect } from 'react'\nimport { useState, useCallback } from 'react';\nimport {\n  Page,\n  Grid,\n  Card,\n  TextField,\n  Select,\n  ResourceList,\n  Filters,\n  Avatar,\n  Stack,\n  Badge,\n  Modal,\n  TextContainer,\n  Button,\n  Heading,\n} from '@shopify/polaris';\n\nfunction Home() {\n  // Modal data state\n  const [active, setActive] = useState(false);\n  const [desableValue, setDesable] = useState(false);\n  // input field state\n  const [textFieldValue, setTextFieldValue] = useState('');\n  const handleClearButtonClick = useCallback(() => setTextFieldValue(''), []);\n\n  const handleTextFieldChange = useCallback(\n    (value) => setTextFieldValue(value), [],\n  );\n  // Select Option State\n  const [selected1, setSelected1] = useState('Select');\n  const [selected2, setSelected2] = useState('Select');\n  const handleSelectChange1 = useCallback((value) => setSelected1(value), []);\n  const handleSelectChange2 = useCallback((value) => setSelected2(value), []);\n  // Select Options Values Asigns\n  const condOpt1 = [\n    { label: 'Select', value: 'select' },\n    { label: 'User Name', value: 'username' },\n    { label: 'Id', value: 'id' },\n    { label: 'Followers', value: 'followers' },\n  ];\n  const condOpt2 = [\n    { label: 'Select', value: 'select' },\n    { label: 'Contains', value: 'contains' },\n    { label: 'Does! Not Contains', value: 'doesnotcontains' },\n    { label: 'Equals To', value: 'equalsto' },\n    { label: 'Not Equals To', value: 'notequalsto' },\n  ];\n\n  // Codition Logic \n  const [rowdata, setRowData] = useState([]);\n  const allGitData = [];\n\n  const [modalData, setModalData] = useState({});\n\n  useEffect(() => {\n    // Username with Contains | DNContains | Equals To | Not Equals To\n    if (selected1 === 'username' && selected2 === 'contains') {\n      usrNameContains();\n    }\n    if (selected1 === 'username' && selected2 === 'doesnotcontains') {\n      usrNameDNCon();\n    }\n    if (selected1 === 'username' && selected2 === 'equalsto') {\n      usrNameEqlTo();\n    }\n    if (selected1 === 'username' && selected2 === 'notequalsto') {\n      usrNameNotEqlTo();\n    }\n\n    // Id with Contains | DNContains | Equals To | Not Equals To\n    if (selected1 === 'id' && selected2 === 'contains') {\n      idContains();\n    }\n    if (selected1 === 'id' && selected2 === 'doesnotcontains') {\n      idDNCon();\n    }\n    if (selected1 === 'id' && selected2 === 'equalsto') {\n      idEqlTo();\n    }\n    if (selected1 === 'id' && selected2 === 'notequalsto') {\n      idNotEqlTo();\n    }\n\n    // Followers with only Equals To \n    if (selected1 === 'followers') {\n      setSelected2('equalsto');\n      setDesable(true);\n      if ( selected1 === 'followers' && selected2 === 'equalsto') {\n        followerEqlTo();\n      }\n    }\n  }, [textFieldValue, selected1, selected2]);\n\n  // Username With Contains Data \n  async function usrNameContains() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (textFieldValue && user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Username With Does Not Contains Data\n  async function usrNameDNCon() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (!user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Username With Equals to\n  async function usrNameEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (user.login === textFieldValue) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Usernam with Notequals to\n  async function usrNameNotEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (!user.login.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n\n\n  // Id With Contains Data \n  async function idContains() {\n\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n      if (textFieldValue && usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Id With Does Not Contains Data\n  async function idDNCon() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n      if (!usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Id With Equals to\n  async function idEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n      if (usrID === textFieldValue) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n  // Id with Notequals to\n  async function idNotEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      const usrID = user.id.toString();\n      if (!usrID.startsWith(textFieldValue)) {\n        tmp.push({\n          id: user.id,\n          name: user.login,\n          userPic: user.avatar_url,\n          userUrl: user.html_url,\n          userType: user.type,\n        });\n      }\n    });\n    allGitData.push(allgitUser)\n    setRowData(tmp);\n  }\n\n  //Followers With Equals To Filter\n  async function followerEqlTo() {\n    const tmp = [];\n    const gitUser = await fetch('https://api.github.com/users');\n    const allgitUser = await gitUser.json();\n    allgitUser.forEach(user => {\n      if (user.login === textFieldValue && selected1 === 'followers' && selected2 === 'equalsto') {\n        fetchFollowers();\n        async function fetchFollowers() {\n          const gitFollowers = await fetch(`https://api.github.com/users/${user.login}/followers`);\n          const allgitFollowers = await gitFollowers.json();\n          allgitFollowers.forEach(followers => {\n            if(textFieldValue==''){\n              setRowData(tmp.push({}));\n            }\n            tmp.push({\n              id: followers.id,\n              name: followers.login,\n              userPic: followers.avatar_url,\n              userUrl: followers.html_url,\n              userType: followers.type,\n            });\n          }\n          );\n          allGitData.push(allgitFollowers)\n          setRowData(tmp);\n        }\n      }\n    }\n    );\n  }\n\n  //Shopify Madal Data Handler\n  function handleChange2(active, id, name, userPic, userUrl, userType) {\n    //let temp = { ...modalData };    \n    let temp = {\n      id, name, userPic, userUrl, userType\n    }\n    console.log(\"temp\", temp.id);\n    setModalData(temp);\n    setActive(!active)\n  }\n\n\n  // function test() {\n  //   console.log(\"modalData\", modalData)\n  //   return <p>{modalData.id}</p>\n  // }\n\n  return (\n    <>\n      <Page>\n        <Card sectioned>\n          <Grid>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 8, xl: 6 }}>\n              <TextField\n                label={\"By \" + selected1 + \" or \" + selected2}\n                value={textFieldValue}\n                onChange={handleTextFieldChange}\n                clearButton\n                onClearButtonClick={handleClearButtonClick}\n                autoComplete=\"off\"\n              />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 2, xl: 6 }}>\n              <Select\n                label=\"Filter\"\n                options={condOpt1}\n                onChange={handleSelectChange1}\n                value={selected1}\n              />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 2, xl: 6 }}>\n              <Select\n                label=\"Filter\"\n                options={condOpt2}\n                onChange={handleSelectChange2}\n                value={selected2}\n                disabled={desableValue}\n              />\n            </Grid.Cell>\n          </Grid>\n          {/* Table */}\n          <ResourceList\n            items={rowdata}\n            renderItem={(item) => {\n              const { id, name, userPic, userUrl, userType } = item;\n              const media = <Avatar customer size=\"medium\" source={userPic} name={name} />;\n              return (\n                <ResourceList.Item\n                  // url={userUrl}\n                  onClick={() => {\n                    handleChange2(active, id, name, userPic, userUrl, userType)\n                  }}\n                  name={name}\n                  id={id}\n                  //user={userPic}\n                  media={media}\n                  accessibilityLabel={`View details for ${name}`}\n                >\n                  <Stack distribution='fillEvenly' spacing='loose'>\n                    <Stack.Item>\n                      <Badge>{id}</Badge>\n                    </Stack.Item>\n                    <Stack.Item>\n                      <Badge>{userType}</Badge>\n                    </Stack.Item>\n                    <Stack.Item fill>\n                      <Heading>{name}</Heading>\n                    </Stack.Item>\n                    <Stack.Item>\n                      <Button size=\"slim\" >View Profile</Button>\n                    </Stack.Item>\n                  </Stack>\n                  {/* <Stack distribution='fillEvenly' spacing='loose'>\n                    <h3>\n                      <TextStyle username={name} variation=\"strong\">{name}</TextStyle>\n                      <Stack>\n                        <Badge>{userType}</Badge>\n                      </Stack>\n                    </h3>\n\n                    <Tag>{userUrl}</Tag>\n\n                    <Stack>\n                      <TextStyle>{id}</TextStyle>\n                    </Stack>\n                  </Stack> */}\n\n                  <div style={{ height: '50px' }}>\n                    <Modal\n                      activator={Filters}\n                      open={active}\n                      onClose={() => { setActive(false) }}\n                      title=\"Received user via github.\"\n                    >\n                      <Modal.Section>\n                        <TextContainer>\n                          <Grid>\n                            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 4, xl: 6 }}>\n                              <div sectioned>\n                                <img alt='Profile' src={modalData.userPic} style={{ height: \"150px\", borderRadius: \"50%\" }} name={name} />\n                              </div>\n                            </Grid.Cell>\n                            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 4, xl: 6 }}>\n                              <div title=\"Profile\" sectioned>\n                                <div style={{ marginTop: \"20px\" }}>\n                                  <div style={{ fontSize: \"25px\" }}>ID\n                                    <span style={{ fontSize: \"25px\", marginLeft: \"12px\" }}><b>{modalData.id}</b></span>\n                                  </div>\n                                  <div style={{ marginTop: \"13px\" }}>\n                                    <span style={{ fontSize: \"25px\" }}>{modalData.userType}</span>\n                                    <span style={{ fontSize: \"25px\", marginLeft: \"12px\" }}><b>{modalData.name}</b></span>\n                                  </div>\n                                  <div style={{ marginTop: \"16px\" }}>\n                                    <Button size=\"slim\" url={modalData.userUrl}>View Profile</Button>\n                                  </div>\n                                </div>\n                              </div>\n                            </Grid.Cell>\n                          </Grid>\n                          <p>\n                            Use GitHub posts to share your products with millions of\n                            people. Let shoppers buy from your store without leaving\n                            Github.\n                          </p>\n                        </TextContainer>\n                        {/* {test()} */}\n                      </Modal.Section>\n                    </Modal>\n                  </div>\n                </ResourceList.Item>\n\n              );\n            }\n            }\n          />\n        </Card>\n      </Page>\n    </>\n  );\n}\n\n\nexport default Home\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}