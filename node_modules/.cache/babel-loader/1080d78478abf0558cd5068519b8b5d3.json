{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/react_training/react-nav/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState, useCallback } from 'react';\nimport { Page, Grid, Card, TextField, Select } from '@shopify/polaris';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [textFieldValue, setTextFieldValue] = useState('');\n  const handleTextFieldChange = useCallback(value => setTextFieldValue(value), []); // input field state\n\n  const handleClearButtonClick = useCallback(() => setTextFieldValue(''), []);\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback(newChecked => setChecked(newChecked), []); // Select Option State\n\n  const [selected1, setSelected1] = useState('username');\n  const [selected2, setSelected2] = useState('contains');\n  console.log(selected1, selected2);\n  const handleSelectChange1 = useCallback(value => setSelected1(value), []);\n  const handleSelectChange2 = useCallback(value => setSelected2(value), []); // Select Options Values Asigns\n\n  const condOpt1 = [{\n    label: 'User Name',\n    value: 'username'\n  }, {\n    label: 'Id',\n    value: 'id'\n  }, {\n    label: 'Followers',\n    value: 'followers'\n  }];\n  const condOpt2 = [{\n    label: 'Contains',\n    value: 'contains'\n  }, {\n    label: 'Does! Not Contains',\n    value: 'doesnotcontains'\n  }, {\n    label: 'Equals To',\n    value: 'equalsto'\n  }, {\n    label: 'Not Equals To',\n    value: 'notequalsto'\n  }]; // Codition Logic \n\n  const [rowdata, setRowData] = useState([]);\n\n  if (selected1 == 'username' && selected2 == 'contains') {\n    async function gitHubData() {\n      const tmp = [];\n      const gitUser = await fetch('https://api.github.com/users');\n      const allgitUser = await gitUser.json();\n      allgitUser.forEach(user => {\n        if (textFieldValue == user.login) {\n          tmp.push({\n            id: user.id,\n            name: user.login,\n            userPic: user.avatar_url,\n            userUrl: user.html_url,\n            userType: user.type\n          });\n        }\n      });\n      allGitData.push(allgitUser);\n      setRowData(tmp);\n    }\n\n    useEffect(() => {\n      gitHubData();\n    }); // function customSearchFn(term: string, item: any) {\n    //   // check if the name startsWith the input, everything in lowercase so \"a\" will match \"A\" \n    //   return item.name.toLowerCase().startsWith(term.toLowerCase())\n    // }\n    // alert(\"Hello Saurabh\")\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sectioned: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 8,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"By \" + selected1 + \" or \" + selected2,\n              value: textFieldValue,\n              onChange: handleTextFieldChange,\n              clearButton: true,\n              onClearButtonClick: handleClearButtonClick,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 2,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Filter\",\n              options: condOpt1,\n              onChange: handleSelectChange1,\n              value: selected1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 3,\n              md: 3,\n              lg: 2,\n              xl: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Filter\",\n              options: condOpt2,\n              onChange: handleSelectChange2,\n              value: selected2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"yY4jzH6z+Xbro8cLBglm3ygPBcs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Page","Grid","Card","TextField","Select","Home","textFieldValue","setTextFieldValue","handleTextFieldChange","value","handleClearButtonClick","checked","setChecked","handleChange","newChecked","selected1","setSelected1","selected2","setSelected2","console","log","handleSelectChange1","handleSelectChange2","condOpt1","label","condOpt2","rowdata","setRowData","gitHubData","tmp","gitUser","fetch","allgitUser","json","forEach","user","login","push","id","name","userPic","avatar_url","userUrl","html_url","userType","type","allGitData","xs","sm","md","lg","xl"],"sources":["/home/cedcoss/Desktop/react_training/react-nav/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState, useCallback } from 'react';\nimport {\n  Page,\n  Grid,\n  Card,\n  TextField,\n  Select,\n\n} from '@shopify/polaris';\n\n\nfunction Home() {\n  const [textFieldValue, setTextFieldValue] = useState('');\n  const handleTextFieldChange = useCallback(\n    (value) => setTextFieldValue(value), [],\n  );\n  // input field state\n  const handleClearButtonClick = useCallback(() => setTextFieldValue(''), []);\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback((newChecked) => setChecked(newChecked), []);\n\n  // Select Option State\n  const [selected1, setSelected1] = useState('username');\n  const [selected2, setSelected2] = useState('contains');\n  console.log(selected1, selected2);\n  const handleSelectChange1 = useCallback((value) => setSelected1(value), []);\n  const handleSelectChange2 = useCallback((value) => setSelected2(value), []);\n  // Select Options Values Asigns\n  const condOpt1 = [\n    { label: 'User Name', value: 'username' },\n    { label: 'Id', value: 'id' },\n    { label: 'Followers', value: 'followers' },\n  ];\n  const condOpt2 = [\n    { label: 'Contains', value: 'contains' },\n    { label: 'Does! Not Contains', value: 'doesnotcontains' },\n    { label: 'Equals To', value: 'equalsto' },\n    { label: 'Not Equals To', value: 'notequalsto' },\n  ];\n\n  // Codition Logic \n  const [rowdata, setRowData] = useState([]);\n  if (selected1 == 'username' && selected2 == 'contains') {\n    async function gitHubData() {\n      const tmp = [];\n      const gitUser = await fetch('https://api.github.com/users');\n      const allgitUser = await gitUser.json();\n\n      allgitUser.forEach(user => {\n        if (textFieldValue == user.login) {\n          tmp.push({\n            id: user.id,\n            name: user.login,\n            userPic: user.avatar_url,\n            userUrl: user.html_url,\n            userType: user.type,\n          });\n        }\n      });\n      allGitData.push(allgitUser)\n      setRowData(tmp);\n    }\n    useEffect(() => {\n      gitHubData();\n    });\n    // function customSearchFn(term: string, item: any) {\n    //   // check if the name startsWith the input, everything in lowercase so \"a\" will match \"A\" \n    //   return item.name.toLowerCase().startsWith(term.toLowerCase())\n    // }\n    // alert(\"Hello Saurabh\")\n  }\n\n  return (\n    <>\n      <Page>\n        <Card sectioned>\n          <Grid>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 8, xl: 6 }}>\n              <TextField\n                label={\"By \" + selected1 + \" or \" + selected2}\n                value={textFieldValue}\n                onChange={handleTextFieldChange}\n                clearButton\n                onClearButtonClick={handleClearButtonClick}\n                autoComplete=\"off\"\n              />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 2, xl: 6 }}>\n              <Select\n                label=\"Filter\"\n                options={condOpt1}\n                onChange={handleSelectChange1}\n                value={selected1}\n              />\n            </Grid.Cell>\n            <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 2, xl: 6 }}>\n              <Select\n                label=\"Filter\"\n                options={condOpt2}\n                onChange={handleSelectChange2}\n                value={selected2}\n              />\n            </Grid.Cell>\n          </Grid>\n        </Card>\n      </Page>\n    </>\n  );\n}\n\n\nexport default Home\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}